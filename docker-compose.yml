version: "3.7"

services:
  postgres:
    container_name: postgres
    image: postgres:14
    restart: always
    ports:
      - '5432:5432'
    environment:
      - .env
    volumes:
      - postgres-data:/var/lib/postgresql/data
  
  prisma:
    build:
      context: .
      dockerfile: ./prisma/Dockerfile
      target: development
    command: npm run prisma:migrate:run && npm run prisma:generate
    environment:
      - .env
    volumes:
      - .:/usr/src/app
    depends_on:
      - postgres

  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.3
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-enterprise-kafka:5.5.3
    depends_on: [zookeeper]
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9991
    ports:
      - 9092:9092

  api-gateway:
    build:
      context: .
      dockerfile: ./apps/api-gateway/Dockerfile
      target: development
    command: npm run start:dev api-gateway
    env_file:
      - ./apps/api-gateway/.env
    ports:
      - '3000:3000'
    volumes:
      - .:/usr/src/app

  transactions:
    build:
      context: .
      dockerfile: ./apps/transactions/Dockerfile
      target: development
    command: npm run start:dev transactions
    env_file:
      - ./apps/transactions/.env
    ports:
      - 3001:3001
    volumes:
      - .:/usr/src/app
    depends_on:
      kafka:
        condition: service_completed_successfully

  anti-frauid:
    build:
      context: .
      dockerfile: ./apps/anti-fraud/Dockerfile
      target: development
    command: npm run start:dev anti-fraud
    env_file:
      - ./apps/transactions/.env
    ports:
      - 3002:3002
    volumes:
      - .:/usr/src/app
    depends_on:
      kafka:
        condition: service_completed_successfully

volumes:
  postgres-data:
  
